services:
  nginx:
    container_name: g_nginx
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
      args:
        PHP_FPM_SERVER: g_php
        PHP_FPM_PORT: 9000
    ports:
      - '${DOCKER_NGINX_PORT-8000}:80'
    volumes:
      - './public:/var/www/html/public'
    networks:
      - backend
    depends_on:
      - php

  php:
    container_name: g_php
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        XDEBUG: 'true'
    volumes:
      - '.:/var/www/html'
      - './docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini'
    networks:
      - backend

  batch:
    container_name: g_batch
    build:
      context: .
      dockerfile: docker/batch/Dockerfile
    volumes:
      - '.:/var/www/html'
    networks:
      - backend

  mysql:
    container_name: g_mysql
    image: 'mysql:8.0.32'
    ports:
      - '${DOCKER_MYSQL_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - 'mysql-data:/var/lib/mysql'
      - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/create-testing-database.sh'
    networks:
      - backend

networks:
  backend:
    name: g_network
    driver: bridge

volumes:
  mysql-data:
    driver: local
